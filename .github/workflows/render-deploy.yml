name: Deploy Render
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      ref:
        required: true
        type: string
      polling-interval:
        description: Polling interval in ms when checking Render deploy status
        default: "30000"
        type: string
    secrets:
      RENDER_API_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: render-${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - name: "NextJS Cache"
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - run: npm run build

  lint:
    runs-on: ubuntu-latest
    environment: render-${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    environment: render-${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: [build, lint, test]
    environment: render-${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: skyfire-xyz/github-actions/deploy@main
        with:
          api-key: ${{ secrets.RENDER_API_KEY }}
          service-name: sky-crawler-${{ inputs.environment }}
          ref: ${{ inputs.ref }}
          wait-time: ${{ inputs.polling-interval }}
          image-tag: null
